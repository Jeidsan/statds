{"frames":[{"func":"tibble(estrada_1 = c(\"12:07:00 AM\", \"15:58:00 AM\", \"01:24:00 AM\", \n    \"01:35:00 AM\", \"02:05:00 AM\", \"03:14:00 AM\", \"03:25:00 AM\", \n    \"03:46:00 AM\", \"05:44:00 AM\", \"05:56:00 AM\", \"06:36:00 AM\", \n    \"07:26:00 AM\", \"07:48:00 AM\", \"09:13:00 AM\", \"12:05:00 PM\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_quos(xs, .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_recycle_rows(res, first_size, j, given_col_names[[j]], \n    call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort_incompatible_size(n, name, size, \"Existing data\", call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_abort(call = call, bullets(\"Tibble columns must have compatible sizes:\", \n    if (!is.null(.rows)) paste0(\"Size \", .rows, \": \", rows_source), \n    problems, info = \"Only values of size one are recycled.\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(x, class, ..., call = call, parent = parent, use_cli_format = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in tibble(estrada_1 = c(\"12:07:00 AM\", \"15:58:00 AM\", \"01:24:00 AM\",  : \n  \u001B[38;5;232m\n\u001B[36m•\u001B[38;5;232m Size 28: Existing data.\n\u001B[36m•\u001B[38;5;232m Size 19: Column `estrada_2`.\n\u001B[36mℹ\u001B[38;5;232m Only values of size one are recycled.\u001B[39m\n"}