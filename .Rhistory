labs(
title = "Figura 3.2: Distribuição do peso dos pacientes",
x = "Peso (kg)"
) +
tema
geom_symmetry <- function(x) {
x <- sort(x)
mediana <- median(x)
n <- length(x)
meio_n <- (n+1)/2
uv = tibble(
u = rep(0, meio_n),
v = rep(0, meio_n)
)
for (i in seq(1, meio_n, 1)) {
uv$u[i] <- mediana - x[i]
uv$v[i] <- x[n + 1 - i] - mediana
}
geom_point(data = uv, mapping = aes(u, v))
}
rehabcardio %>%
ggplot() +
geom_symmetry(rehabcardio$Peso) +
geom_abline(aes(intercept = 0, slope = 1), color = "red", alpha = .5) +
labs(
title = "Figura 3.3: Gráfico de simetria para o peso dos pacientes",
x = "Dispersão inferior",
y = "Dispersão superior"
) +
tema
rehabcardio %>%
ggplot(aes(x = Altura)) +
geom_histogram(
mapping = aes(y = ..density..),
binwidth = 0.06,
fill = "grey",
color = "grey30"
) +
geom_function(
fun = dnorm,
args = list(
mean = mean(rehabcardio$Altura, na.rm = TRUE),
sd = sd(rehabcardio$Altura, na.rm = TRUE)
)
) +
labs(
title = "Figura 3.4: Distribuição de frequência das alturas dos pacientes",
x = "Altura (m)",
y = "Densidade da frequência"
) +
tema
rehabcardio %>%
ggplot(aes(x = Altura)) +
stat_boxplot(geom = "errorbar", width = 0.2) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = "Figura 3.5: Distribuição da altura dos pacientes",
x = "Altura (m)"
) +
tema
rehabcardio %>%
ggplot() +
geom_symmetry(rehabcardio$Altura) +
geom_abline(aes(intercept = 0, slope = 1), color = "red", alpha = .5) +
labs(
title = "Figura 3.6: Gráfico de simetria para a altura dos pacientes",
x = "Dispersão inferior",
y = "Dispersão superior"
) +
tema
rehabcardio %>%
ggplot(aes(x = Coltot)) +
geom_histogram(
mapping = aes(y = ..density..),
binwidth = 20,
fill = "grey",
color = "grey30"
) +
geom_function(
fun = dnorm,
args = list(
mean = mean(rehabcardio$Coltot, na.rm = TRUE),
sd = sd(rehabcardio$Coltot, na.rm = TRUE)
)
) +
labs(
title = "Figura 3.7: Distribuição de frequência do colesterol total dos pacientes",
x = "Colesterol total (mg/dL)",
y = "Densidade da frequência"
) +
tema
rehabcardio %>%
ggplot(aes(x = Coltot)) +
stat_boxplot(geom = "errorbar", width = 0.2) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = "Figura 3.9: Distribuição do colesterol total dos pacientes",
x = "Colesterol total (mg/dL)"
) +
tema
rehabcardio %>%
ggplot() +
geom_symmetry(rehabcardio$Coltot) +
geom_abline(aes(intercept = 0, slope = 1), color = "red", alpha = .5) +    labs(
title = "Figura 3.10: Gráfico de simetria para os níveis de colesterol total dos pacientes",
x = "Dispersão inferior",
y = "Dispersão superior"
) +
tema
rehabcardio %>%
ggplot(aes(x = HDL)) +
geom_histogram(
mapping = aes(y = ..density..),
binwidth = 7,
fill = "grey",
color = "grey30"
) +
geom_function(
fun = dnorm,
args = list(
mean = mean(rehabcardio$HDL, na.rm = TRUE),
sd = sd(rehabcardio$HDL, na.rm = TRUE)
)
) +
labs(
title = "Figura 3.11: Distribuição de frequência do colesterol HDL dos pacientes",
x = "Colesterol HDL (mg/dL)",
y = "Densidade da frequência"
) +
tema
rehabcardio %>%
ggplot(aes(x = HDL)) +
stat_boxplot(geom = "errorbar", width = 0.2) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = "Figura 3.12: Distribuição do colesterol HDL dos pacientes",
x = "Colesterol HDL (mg/dL)"
) +
tema
rehabcardio %>%
ggplot() +
geom_symmetry(rehabcardio$HDL) +
geom_abline(aes(intercept = 0, slope = 1), color = "red", alpha = .5) +
labs(
title = "Figura 3.13: Gráfico de simetria para os níveis de colesterol HDL dos pacientes",
x = "Dispersão inferior",
y = "Dispersão superior"
) +
tema
rehabcardio %>%
ggplot(aes(x = LDL)) +
geom_histogram(
mapping = aes(y = ..density..),
binwidth = 20,
fill = "grey",
color = "grey30"
) +
geom_function(
fun = dnorm,
args = list(
mean = mean(rehabcardio$LDL, na.rm = TRUE),
sd = sd(rehabcardio$LDL, na.rm = TRUE)
)
) +
labs(
title = "Figura 3.14: Distribuição de frequência do colesterol LDL dos pacientes",
x = "Colesterol LDL (mg/dL)",
y = "Densidade da frequência"
) +
tema
rehabcardio %>%
ggplot(aes(x = LDL)) +
stat_boxplot(geom = "errorbar", width = 0.2) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = "Figura 3.15: Distribuição do colesterol LDL dos pacientes",
x = "Colesterol LDL (mg/dL)"
) +
tema
rehabcardio %>%
ggplot() +
geom_symmetry(rehabcardio$LDL)+
geom_abline(aes(intercept = 0, slope = 1), color = "red", alpha = .5) +
labs(
title = "Figura 3.16: Gráfico de simetria para os níveis de colesterol LDL dos pacientes",
x = "Dispersão inferior",
y = "Dispersão superior"
) +
tema
summ <- function(x) {
c(
n = sum(!is.na(x), na.rm = TRUE),
`Mínimo` = min(x, na.rm = TRUE),
Q1 = quantile(x, 0.25, na.rm = TRUE)[[1]],
`Mediana` = median(x, na.rm = TRUE),
Q3 = quantile(x, 0.75, na.rm = TRUE)[[1]],
`Máximo` = max(x, na.rm = TRUE),
`Média` = mean(x, na.rm = TRUE),
`Desvio Padrão` = sd(x, na.rm = TRUE),
`Distância Interquartil` = IQR(x, na.rm = TRUE)
)
}
resumo <- rehabcardio %>%
select(Peso, Altura, Coltot, HDL, LDL) %>%
map(summ) %>%
as.data.frame() %>%
t()
resumo %>%
kable(
format = "pipe",
caption = "**Tabela 3.4:** Medidas de resumo para algumas variáveis de `rehabcardio.xls`",
label = NA,
digits = 2,
align = "c",
format.args = list(decimal.mark = ",")
)
rehabcardio %>%
ggplot(aes(sample = Peso)) +
geom_qq() +
geom_qq_line() +
labs(
title = "Figura 3.17: Gráfico QQ normal para o peso dos pacientes",
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
rehabcardio %>%
ggplot(aes(sample = Altura)) +
geom_qq() +
geom_qq_line() +
labs(
title = "Figura 3.18: Gráfico QQ normal para a altura dos pacientes",
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
rehabcardio %>%
ggplot(aes(sample = Coltot)) +
geom_qq() +
geom_qq_line() +
labs(
title = "Figura 3.19: Gráfico QQ normal para os níveis de colesterol total dos pacientes",
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
rehabcardio %>%
ggplot(aes(sample = HDL)) +
geom_qq() +
geom_qq_line() +
labs(
title = "Figura 3.20: Gráfico QQ normal para os níveis de colesterol HDL dos pacientes",
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
rehabcardio %>%
ggplot(aes(sample = LDL)) +
geom_qq() +
geom_qq_line() +
labs(
title = "Figura 3.21: Gráfico QQ normal para os níveis de colesterol LDL dos pacientes",
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
antracose <- readxl::read_xls(paste0(data_dir, "antracose.xls"))
resumo <- antracose %>%
map(summ) %>%
as.data.frame() %>%
t()
colnames(resumo) <- c("Quantidade de observações", "Mínimo", "Máximo", "Média", "Desvio padrão", "Mediana", "Distância interquartil")
8,46/1,35
8.46/1.35
(8.46 - 1.35)/1.35
endometriose %>%
ggplot(aes(PCRa)) +
geom_histogram(
fill = "grey",
color = "grey30"
) +
facet_wrap(~Grupo) +
labs(
title = "Figura 3.64: Distribuição da variável `PCRa` entre pacientes",
x = "PCRa",
y = "Quantidade"
) +
tema
endometriose %>%
ggplot(aes(PCRa)) +
geom_histogram(
binwidth = 8,
fill = "grey",
color = "grey30"
) +
facet_wrap(~Grupo) +
labs(
title = "Figura 3.64: Distribuição da variável `PCRa` entre pacientes",
x = "PCRa",
y = "Quantidade"
) +
tema
endometriose %>%
ggplot(aes(PCRa)) +
geom_histogram(
binwidth = 5,
fill = "grey",
color = "grey30"
) +
facet_wrap(~Grupo) +
labs(
title = "Figura 3.64: Distribuição da variável `PCRa` entre pacientes",
x = "PCRa",
y = "Quantidade"
) +
tema
endometriose %>%
ggplot(aes(PCRa)) +
geom_histogram(
binwidth = 8,
fill = "grey",
color = "grey30"
) +
facet_wrap(~Grupo) +
labs(
title = "Figura 3.64: Distribuição da variável `PCRa` entre pacientes",
x = "PCRa",
y = "Quantidade"
) +
tema
endometriose %>%
ggplot(aes(PCRa)) +
geom_histogram(
binwidth = 4,
fill = "grey",
color = "grey30"
) +
facet_wrap(~Grupo) +
labs(
title = "Figura 3.64: Distribuição da variável `PCRa` entre pacientes",
x = "PCRa",
y = "Quantidade"
) +
tema
endometriose %>%
group_by(Grupo) %>%
summarise(
f = n(),
fr = f/sum(f)
)
endometriose %>%
group_by(Grupo) %>%
summarise(
f = n(Gestação),
fr = f/sum()
)
endometriose %>%
group_by(Grupo, Gestação) %>%
summarise(
f = n(),
fr = f/sum()
)
endometriose %>%
group_by(Grupo, Gestação) %>%
count()
endometriose %>%
group_by(Grupo, Gestação) %>%
count() %>%
spread(Grupo, n)
?spread
?pivot_wider
endometriose %>%
group_by(Grupo, Gestação) %>%
count() %>%
pivot_wider(Grupo, n)
endometriose %>%
group_by(Grupo, Gestação) %>%
count() %>%
pivot_wider(names_from = Grupo, values_from = n)
endometriose %>%
group_by(Grupo, Gestação) %>%
count() %>%
pivot_wider(names_from = Grupo, values_from = n, values_fill = 0)
endometriose %>%
group_by(Grupo, Gestação) %>%
count() %>%
pivot_wider(names_from = Grupo, values_from = n, values_fill = 0) %>%
arrange(Gestação)
endometriose %>%
ggplot(aes(x = Grupo, y = Gestação)) +
stat_boxplot(
geom = "errorbar",
width = 0.2
) +
geom_boxplot(
fill = "grey",
color = "grey30"
)
endometriose %>%
ggplot(aes(x = Grupo, y = Gestação)) +
stat_boxplot(
geom = "errorbar",
width = 0.2
) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = "Figura 3.66: Número de gestações entre mulheres com e sem endometriose",
x = "Grupo",
y = "Número de gestações"
) +
tema
soma <- 0
k <- 0
while(k < 13) {
k <- k + 1
soma <- soma + k
}
soma
faturamento <- data.frame(
estado = c("São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo", "Outros"),
faturamento = c(67836.43, 36678.66, 29229.88, 27165.48, 19849.53)
)
faturamento %>%
mutate(
participacao = faturamento / sum(participacao$faturamento)
)
faturamento
faturamento %>%
mutate(
participacao = faturamento / sum(participacao$faturamento)
)
library(tidyverse)
library(tidyverse)
faturamento <- data.frame(
estado = c("São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo", "Outros"),
faturamento = c(67836.43, 36678.66, 29229.88, 27165.48, 19849.53)
)
faturamento
faturamento %>%
mutate(
participacao = faturamento / sum(participacao$faturamento)
)
sum(participacao$faturamento)
faturamento %>%
mutate(
participacao = faturamento / sum(faturamento$faturamento)
)
library(tidyverse)
faturamento <- data.frame(
estado = c("São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo", "Outros"),
faturamento = c(67836.43, 36678.66, 29229.88, 27165.48, 19849.53)
)
faturamento %>%
mutate(
participacao = faturamento / sum(faturamento$faturamento)
)
View(faturamento)
sum(faturamento$faturamento)
faturamento %>%
mutate(
participacao = faturamento / sum(faturamento$faturamento)
)
faturamento
library(tidyverse)
faturamento <- data.frame(
estado = c("São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo", "Outros"),
faturamento = c(67836.43, 36678.66, 29229.88, 27165.48, 19849.53)
)
total <- sum(faturamento$faturamento)
faturamento %>%
mutate(
participacao = faturamento / total
)
faturamento %>%
mutate(
participacao = 100 * faturamento / total
)
faturamento %>%
mutate(
participacao = round(100 * faturamento / total, digits = 2)
)
faturamento <- data.frame(
estado = c("São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo", "Outros"),
faturamento = c(67836.43, 36678.66, 29229.88, 27165.48, 19849.53)
)
total <- sum(faturamento$faturamento)
faturamento$representacao <- round(100 * faturamento$faturamento / total, digits = 2)
faturamento
faturamento <- data.frame(
estado = c("São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo", "Outros"),
faturamento = c(67836.43, 36678.66, 29229.88, 27165.48, 19849.53)
)
(faturamento$representacao <- round(
100 * faturamento$faturamento / sum(faturamento$faturamento),
digits = 2
))
faturamento
