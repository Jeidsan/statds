format = "pipe",
caption = "**Tabela 3.15:** Resumo do intervalo entre chamadas para as duas estradas",
label = NA,
digits = 2,
align = "c",
format.args = list(decimal.mark = ",")
)
chamadas %>%
ggplot(aes(horario)) +
geom_histogram(
bins = 12,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.70:")~"Horário das chamadas de apoio"),
x = "Horário",
y = "Frequência observada"
)
chamadas %>%
ggplot(aes(horario)) +
geom_histogram(
bins = 12,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.70:")~"Horário das chamadas de apoio"),
x = "Horário",
y = "Frequência observada"
) +
tema
chamadas %>%
ggplot(aes(x = estrada, y = intervalo)) +
stat_boxplot(
geom = "errorbar",
width = 0.2
) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = bquote(bold("Figura 3.71:")~"Distribuição dos intervalos entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência observada"
) +
tema
chamadas %>%
ggplot(aes(x = estrada, y = intervalo)) +
stat_boxplot(
geom = "errorbar",
width = 0.2
) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = bquote(bold("Figura 3.71:")~"Distribuição dos intervalos entre as chamadas"),
x = "Estrada",
y = "Intervalo (s)"
) +
tema
chamadas %>%
ggplot(aes(x = estrada, y = intervalo)) +
stat_boxplot(
geom = "errorbar",
width = 0.2
) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = bquote(bold("Figura 3.71:")~"Distribuição dos intervalos entre as chamadas"),
x = "",
y = "Intervalo (s)"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_qq()
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq()
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq() +
geom_qq_line() +
labs(
title = bquote(bold("Figura 3.69:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
?geom_qq
?stats::qnorm
?stats
library(help = "stats")
?stats::qexp
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq(
distribution = stat::qexp
) +
geom_qq_line(
distribution = stat::qexp
) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq(
distribution = stats::qexp
) +
geom_qq_line(
distribution = stats::qexp
) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq(
distribution = stats::qexp
) +
geom_qq_line(
distribution = stats::qexp
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis exponenciais",
y = "Quantis amostrais"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_histogram(
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_histogram(
binwidth = 300,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_histogram(
binwidth = 1000,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_histogram(
binwidth = 600,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_histogram(
binwidth = 500,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência"
) +
tema
chamadas %>%
ggplot(aes(intervalo)) +
geom_histogram(
binwidth = 900,
fill = "grey",
color = "grey30"
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.72:")~"Intervalo de tempo entre as chamadas"),
x = "Intervalo (s)",
y = "Frequência"
) +
tema
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.73:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis normais",
y = "Quantis amostrais"
) +
tema
chamadas %>%
ggplot(aes(sample = intervalo)) +
geom_qq(
distribution = stats::qexp
) +
geom_qq_line(
distribution = stats::qexp
) +
facet_wrap(~ estrada) +
labs(
title = bquote(bold("Figura 3.74:")~"Intervalo de tempo entre as chamadas"),
x = "Quantis exponenciais",
y = "Quantis amostrais"
) +
tema
estatistica <- tibble(
nota = c(7, 5, 4, 5, 6, 3, 8, 4, 5, 4, 6, 4, 5, 6, 4, 6, 6, 3, 8, 4, 5, 4, 5, 5, 6)
)
estatistica <- tibble(
nota = c(7, 5, 4, 5, 6, 3, 8, 4, 5, 4, 6, 4, 5, 6, 4, 6, 6, 3, 8, 4, 5, 4, 5, 5, 6)
) %>%
mutate(
status = ifelse(nota < 5, "Reprovado", "Aprovado")
)
estatistica
head(estatistica)
estatistica %>%
map(notas, simm)
estatistica %>%
map(nota, simm)
map(estatistica$nota, summ)
summ(estatistica$nota)
estatistica$nota %>%
summ() %>%
t()
estatistica$nota %>%
summ() %>%
kable()
estatistica$nota %>%
summ() %>%
kable(
format = "pipe",
caption = "**Tabela 3.16:** Medidas de resumo para as notas em estatística",
label = NA,
digits = 2,
align = "c",
format.args = list(decimal.mark = ",")
)
estatistica %>%
map(summ)
estatistica %>%
group_by(status) %>%
map(summ)
estatistica %>%
group_by(status) %>%
nest() %>%
mutate(
resumo = map(data, summ_data)
)
estatistica %>%
group_by(status) %>%
nest() %>%
mutate(
resumo = map(data, summ_data)
)
estatistica %>%
group_by(status) %>%
nest()
summ_data
estatistica %>%
group_by(status) %>%
nest() %>%
mutate(
resumo = map(data$nota, summ)
)
estatistica %>%
filter(status == "Aprovado") %>%
sum()
estatistica %>%
filter(status == "Aprovado") %>%
sum(nota)
estatistica %>%
filter(status == "Aprovado") %>%
mean(nota)
apr <- estatistica %>% filter(status == "Aprovado")
rep <- estatistica %>% filter(status == "Reprovado")
apr$nota %>%
summ() %>%
kable(
format = "pipe",
caption = "**Tabela 3.17:** Medidas de resumo para as notas dos aprovados em estatística",
label = NA,
digits = 2,
align = "c",
format.args = list(decimal.mark = ",")
)
rep$nota %>%
summ() %>%
kable(
format = "pipe",
caption = "**Tabela 3.18:** Medidas de resumo para as notas dos aprovados em estatística",
label = NA,
digits = 2,
align = "c",
format.args = list(decimal.mark = ",")
)
rep$nota %>%
summ() %>%
kable(
format = "pipe",
caption = "**Tabela 3.18:** Medidas de resumo para as notas dos reprovados em estatística",
label = NA,
digits = 2,
align = "c",
format.args = list(decimal.mark = ",")
)
estatistica %>%
ggplot(aes(x = status, y = nota)) +
stat_boxplot(
geom = "errorbar",
width = 0.2
) +
geom_boxplot(
fill = "grey",
color = "grey30"
) +
labs(
title = bquote(bold("Figura 3.75:")~"Distribuição das notas em Estatística"),
x = "Resultado Final",
y = "Nota"
) +
tema
r1 <- c(10,10,10,10,10,10,12,12,12,12,14,16,16,16,16,18,18,18,18,18,18)
r2 <- c(10,10,10,10,12,12,12,12,14,14,14,14,14,16,16,16,16,18,18,18,18)
mean(r1)
sd(r1)
meaan(r2)
r1 <- c(10,10,10,10,10,10,12,12,12,12,14,16,16,16,16,18,18,18,18,18,18)
r2 <- c(10,10,10,10,12,12,12,12,14,14,14,14,14,16,16,16,16,18,18,18,18)
mean(r1)
sd(r1)
mean(r2)
sd(r2)
qnorm(1000, mean = 7000, sd = 1/100)
qnorm(0:10000, mean = 7000, sd = 1/100)
qnorm(0:1000, mean = 7000, sd = 0.1)
qnorm(1:1000, mean = 7000, sd = 0.1)
rnorm(1:1000, mean = 7000, sd = 0.1)
rnorm(1000, mean = 7000, sd = 0.1)
rnorm(1000, mean = 7000, sd = 1/1000)
ggplot(salario) +
geom_density()
ggplot() +
geom_density(aes(salario))
plot(rnorm(1000, mean = 7000, sd = 1/1000))
salario <- data.frame(
x = rnorm(1000, mean = 7000, sd = 1/1000)
)
salario %>%
ggplot(aes(x)) +
geom_histogram()
salario %>%
ggplot(aes(x = x)) +
geom_density()
salario <- data.frame(
x = rnorm(1000, mean = 7000, sd = 1/1000)
)
salario <- tibble(
x = rnorm(1000, mean = 7000, sd = 1/1000)
)
library(tidyverse)
library(knitr)
library(e1071)
library(gridExtra)
data_dir <- paste0(getwd(), "/data/")
options(
repr.plot.width = 24,
repr.plot.height = 13,
knitr.kable.NA = " - "
)
tema <- theme_bw() +
theme(
plot.title   = element_text(size = 12, vjust = +2, hjust = 0.5),
axis.title.y = element_text(size = 10, vjust = +4),
axis.title.x = element_text(size = 10, vjust = -1),
axis.text.y  = element_text(size = 10),
axis.text.x  = element_text(size = 10),
legend.text  = element_text(size = 10),
strip.text   = element_text(size = 10)
)
salario <- tibble(
x = rnorm(1000, mean = 7000, sd = 1/1000)
)
salario
salario %>%
ggplot(aes(x = x)) +
geom_density()
salario %>%
ggplot(aes(x = x)) +
geom_histogram()
salario %>%
ggplot(aes(x = x)) +
geom_density()
salario %>%
ggplot(aes(x = x)) +
geom_histogram(
fill = "grey",
color = "grey30"
) +
labs(
title = bquote(bold("Figura 3.76:")~"Distribuição dos salários na empresa B"),
x = "Salário",
y = "Frequência"
) +
tema
10 - (1.5 * 10)
20 + (1.5 * 10)
pnorm(40, 60, 10)
pnorm(40, 60, 30)
pnorm(60, 60, 30)
pnorm(40, 60, 30)
(p_A > p_B)
p_A <- pnorm(40, 60, 10)
p_B <- pnorm(40, 60, 30)
(p_A <- pnorm(40, 60, 10))
(p_B <- pnorm(40, 60, 30))
(1*40)+(2*50)+(3*30)+(4*40)+(5*50)
(1*40)+(2*50)+(3*30)+(4*20)+(5*10)
360/150
40/150
90/150
120/150
140/150
50/150
30/150
20/150
10/150
rep(1, 40)
x <- c(rep(1, 40), rep(2,50), rep(3, 30), rep(4,20), rep(5,10))
x
length(x)
mean(x)
50+30+20+10
110/110
110/150
12 + 35
47+18
quantil
quantil <- function(l, p, n, f_p, f_ant, h) {
l + (((p * n) - f_ant) * (h / f_p))
}
quantil(5, 0.25, 100, 23, 8, 5)
media <- (8*2.5 + 23*7.5 + 12*12.5 + 9*17.5 + 8 * 22.5 + 6*27.5)/66
media
var<- 8*(2.5 - media)^2 + 23*(7.5 - media)^2 + 12*(12.5 - media)^2 + 9*(17.5 -media)^2 + 8 * (22.5 - media)^2 + 6* (27.5 - media)^2
var
sqrt(var)
var <- var/65
var
sqrt(var)
18+14+12+9
